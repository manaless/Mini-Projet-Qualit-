<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.0.xsd">



	<http auto-config="true" use-expressions="true">

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user**" access="hasRole('ROLE_USER')" />
<!-- 		<form-login login-page="/login" default-target-url="/welcome" -->
<!-- 			login-processing-url="POST/login" authentication-failure-url="/login" -->
<!-- 			username-parameter="username" password-parameter="password" /> -->
<!-- 		<logout logout-success-url="/login" /> -->
<!-- 		<csrf /> -->
	</http>





	<!-- <authentication-manager> -->
	<!-- <authentication-provider> -->
	<!-- <user-service> -->
	<!-- <user name="wafa" password="wafa" authorities="ROLE_USER" /> -->
	<!-- </user-service> -->
	<!-- </authentication-provider> -->
	<!-- </authentication-manager> -->

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select login,password,enable from compte where login=?"
				authorities-by-username-query="select login,role from role where login=?  " />
		</authentication-provider>
	</authentication-manager>




</beans:beans>
